/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.5 */

#ifndef PB_ADDRESSBOOK_PB_H_INCLUDED
#define PB_ADDRESSBOOK_PB_H_INCLUDED
#include "pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _Person_PhoneType { 
    Person_PhoneType_MOBILE = 0, 
    Person_PhoneType_HOME = 1, 
    Person_PhoneType_WORK = 2 
} Person_PhoneType;

/* Struct definitions */
typedef struct _AddressBook { 
    pb_callback_t people; 
} AddressBook;

typedef struct _Person { 
    pb_callback_t name; 
    int32_t id; 
    pb_callback_t email; 
    pb_callback_t phones; 
} Person;

typedef struct _Person_PhoneNumber { 
    pb_callback_t Number; 
    Person_PhoneType type; 
} Person_PhoneNumber;


/* Helper constants for enums */
#define _Person_PhoneType_MIN Person_PhoneType_MOBILE
#define _Person_PhoneType_MAX Person_PhoneType_WORK
#define _Person_PhoneType_ARRAYSIZE ((Person_PhoneType)(Person_PhoneType_WORK+1))


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define Person_init_default                      {{{NULL}, NULL}, 0, {{NULL}, NULL}, {{NULL}, NULL}}
#define Person_PhoneNumber_init_default          {{{NULL}, NULL}, _Person_PhoneType_MIN}
#define AddressBook_init_default                 {{{NULL}, NULL}}
#define Person_init_zero                         {{{NULL}, NULL}, 0, {{NULL}, NULL}, {{NULL}, NULL}}
#define Person_PhoneNumber_init_zero             {{{NULL}, NULL}, _Person_PhoneType_MIN}
#define AddressBook_init_zero                    {{{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define AddressBook_people_tag                   1
#define Person_name_tag                          1
#define Person_id_tag                            2
#define Person_email_tag                         3
#define Person_phones_tag                        4
#define Person_PhoneNumber_Number_tag            1
#define Person_PhoneNumber_type_tag              2

/* Struct field encoding specification for nanopb */
#define Person_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   name,              1) \
X(a, STATIC,   SINGULAR, INT32,    id,                2) \
X(a, CALLBACK, SINGULAR, STRING,   email,             3) \
X(a, CALLBACK, REPEATED, MESSAGE,  phones,            4)
#define Person_CALLBACK pb_default_field_callback
#define Person_DEFAULT NULL
#define Person_phones_MSGTYPE Person_PhoneNumber

#define Person_PhoneNumber_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   Number,            1) \
X(a, STATIC,   SINGULAR, UENUM,    type,              2)
#define Person_PhoneNumber_CALLBACK pb_default_field_callback
#define Person_PhoneNumber_DEFAULT NULL

#define AddressBook_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, MESSAGE,  people,            1)
#define AddressBook_CALLBACK pb_default_field_callback
#define AddressBook_DEFAULT NULL
#define AddressBook_people_MSGTYPE Person

extern const pb_msgdesc_t Person_msg;
extern const pb_msgdesc_t Person_PhoneNumber_msg;
extern const pb_msgdesc_t AddressBook_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define Person_fields &Person_msg
#define Person_PhoneNumber_fields &Person_PhoneNumber_msg
#define AddressBook_fields &AddressBook_msg

/* Maximum encoded size of messages (where known) */
/* Person_size depends on runtime parameters */
/* Person_PhoneNumber_size depends on runtime parameters */
/* AddressBook_size depends on runtime parameters */

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
